{% extends "layout.html.twig" %}

{% block styles %}
{{ parent() }}
<link rel="stylesheet" href="/js/select2/select2.css" type="text/css" />
{% endblock %}

{% block content %}
<div class="list screen">
    <ul class="fancy-list attraction-list">
    {% for attraction in attractions %}
        <li class="attraction" data-geolocation="[{{ attraction.lat }}, {{ attraction.lon }}]">
            <div class="hiking badge">
                <span></span>
            </div>
            <div class="toggle">
                <p><strong>{{ attraction.name }}</strong></p>
            </div>
            <div>
                <span data-provides="attraction-replace" data-attraction="{{ attraction.id }}">X</span>
            </div>
        </li>
    {% endfor %}
    </ul>
    <div id="map-canvas" class="google-map" style="height: 200px; width: 100%;"><img src="/img/map.png" /></div>
    <div id="directions" class="adventure">
    </div>
</div>

{% endblock %}

{% block scripts %}
<script type="text/x-template" id="attraction-tpl">
<li class="attraction" data-geolocation="[<%- lat %>, <%- lon %>]">
    <div class="hiking badge">
        <span></span>
    </div>
    <div class="toggle">
        <p><strong><%- name %></strong></p>
    </div>
    <div>
        <span data-provides="attraction-replace" data-attraction="<%- id %>">X</span>
    </div>
</li>
</script>

{{ parent() }}
<script src="https://maps.googleapis.com/maps/api/js?sensor=true&libraries=geometry"></script>
<script src="/js/gmap-extend.js"></script>
<script src="/js/map.js"></script>
<script>
    //Hack to demo
    document.addEventListener('keyup', function (e) {
        if (e.keyCode = 71) {
            nextDirection = true;
        }
    });


    //Instantiate the map
    map.config({
        id: 'map-canvas',
        map: {center: [43.83130289858731, -72.0268984375]}
    });
    map.init();


    //Get location to kick things off
    navigator.geolocation.getCurrentPosition(function (pos) {
        nextDirection = false;//Global for demo
        var locations = getLocations(),
            ids = updateDirections(pos, locations);
        function confirm () {
            $('.screen').removeClass('list').addClass('directions');
            map.resize('100%', '508px');
        }
    });

    function getLocations () {
        return [[43.48156941314745, -71.8950625], [43.89863026081283, -71.6918154296875], [44.22231761201409, -72.1752138671875]];
        return $('.fancy-list li').map(function () {
                return $(this).data('geolocation');
            });
    }

    function locationMarkers (locations) {
        return locations.map(function (p) {
                return map.addMarker({position: p, icon: 'http://images2.wikia.nocookie.net/__cb20130626170632/nitrome/images/c/cb/Treasure_chest.png'});
            });
    }

    function updateDirections (pos, locations) {
        var ids = locationMarkers(locations); 
        directions.get(pos.coords, locations[0], locations[1], locations[2], function (pos) {
            var pos = mapUtils.latLngToArray(pos),
                proximity = _.filter(locations, function (p) {
                    return mapUtils.inRadius(pos, 0.002, p);
                });
            if (proximity.length) {
                console.log('on target');
            }
        });
        return ids;
    }

</script>
<script>
	$(".menu, .overlay").click(function() {
		$("nav").toggleClass( "open" );
	});
    $('.attraction-list').on('click', '.toggle', function(e) {
		$(e.currentTarget).closest("li").toggleClass( "open" );
	});
</script>
<script type="text/javascript" charset="utf-8">
var unlock = unlock || {};

unlock.results = {
    criteria: {{ criteria.id }},
    replace_url: '/index_dev.php/criteria/{{ criteria.id }}/attraction/replace/',
    getReplaceUrl: function(attraction_id) {
        return this.replace_url + attraction_id;
    },
    init: function() {
        var _this = this;
        this.result_tpl = _.template($('#attraction-tpl').text());
        $('.attraction-list').on('click', '[data-provides="attraction-replace"]', function(e) {
            var $btn = $(e.currentTarget),
                $old_attraction = $btn.parents('.attraction');
            $.getJSON(_this.getReplaceUrl($btn.data('attraction')), function(data) {
                var $new_attraction = $($.trim(_this.result_tpl(data)));
                $old_attraction.replaceWith($new_attraction);
            });
        });
    }
};

unlock.results.init();
</script>
{% endblock %}
