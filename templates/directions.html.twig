{% extends "layout.html.twig" %}

{% block styles %}
{{ parent() }}
<link rel="stylesheet" href="/js/select2/select2.css" type="text/css" />
{% endblock %}

{% block content %}
<div class="list screen">
    <ul class="fancy-list attraction-list">
    {% for attraction in attractions %}
        {% set verb = attraction.firstVerb() %}
        <li class="attraction" data-geolocation="[{{ attraction.lat }}, {{ attraction.lon }}]">
            <div class="{{ verb.gerund | lower | replace(' ', '-') }} badge">
                <span></span>
            </div>
            <div class="toggle">
                <p>
                    <strong>{{ attraction.name }}</strong><br />
                    {% if verb %}
                    {{ verb.gerund }} @
                    {% endif %}
                    {{ attraction.city().first() ? attraction.city().first().name : '' }}
                    </p>
            </div>
            <div>
                <span data-provides="attraction-replace" data-attraction="{{ attraction.id }}">X</span>
            </div>
        </li>
    {% endfor %}
    </ul>
    <div id="map-canvas" class="google-map" style="height: 169px; width: 100%;"><img src="/img/map.png" /></div>
    <button class="congrats-button">
        Congratulations
        <small>View Your Badges</small>
    </button>
    <button class="go-button">GO</button>
    <div id="directions" class="directions">
    </div>
</div>

{% endblock %}

{% block scripts %}
<script type="text/x-template" id="attraction-tpl">
<li class="attraction" data-geolocation="[<%- lat %>, <%- lon %>]">
    <div class="<% print(verb.gerund.toLowerCase().replace(' ', '-')) %> badge">
        <span></span>
    </div>
    <div class="toggle">
        <p>
        <% print(verb.gerund) %>@<br />
        <strong><%- name %></strong><br /><% print(city.name) %></p>
    </div>
    <div>
        <span data-provides="attraction-replace" data-attraction="<%- id %>">X</span>
    </div>
</li>
</script>

{{ parent() }}
<script src="https://maps.googleapis.com/maps/api/js?sensor=true&libraries=geometry"></script>
<script src="/js/gmap-extend.js"></script>
<script src="/js/map.js"></script>
<script>
    //Hack to demo
    nextDirection = false;//Global for demo
    document.addEventListener('keyup', function (e) {
        if (e.keyCode = 71) {
            nextDirection = true;
        }
    });


    //Instantiate the map
    map.config({
        id: 'map-canvas',
        map: {center: [43.83130289858731, -72.0268984375]}
    });
    map.init();

    $('button.go-button').on('click', confirm);

    function confirm () {
        $(this).remove();
        $('.screen').removeClass('list').addClass('directions');
        map.resize('100%', '354px');
        directions.zoom();
    }

    function complete () {
        location.href = '/badges';
    }


    //Get location to kick things off
    function refreshPosition () {
        var ids;
        function foo (pos) {
            if (ids) {
                ids.forEach(function (id) {
                    map.deleteMarker(id);
                });
            }
            var locations = getLocations();
            ids = updateDirections(pos, locations);

            function getLocations () {
                return $('.fancy-list li').toArray().map(function (el) {
                        return $(el).data('geolocation');
                    });
            }

            function locationMarkers (locations) {
                return locations.map(function (p) {
                        return map.addMarker({position: p, icon: 'http://images2.wikia.nocookie.net/__cb20130626170632/nitrome/images/c/cb/Treasure_chest.png'});
                    });
            }

            map.getMap().setZoom(map.getMap().getZoom() + 1);

            function updateDirections (pos, locations) {
                var ids = locationMarkers(locations); 
                directions.get(pos.coords, locations[0], locations[1], locations[2], function (pos) {
                    var pos = mapUtils.latLngToArray(pos),
                        proximity = _.findIndex(locations, function (p) {
                            return mapUtils.inRadius(pos, 0.002, p);
                        });
                    if (proximity !== -1) {
                        $('.fancy-list li:eq(' + proximity + ')').addClass('complete');
                    }
                }, function (pos) {
                    $('.fancy-list li:last-child').addClass('complete');
                    $('button.congrats-button').addClass('show').on('click', complete);
                });
                return ids;
            }
        }
        navigator.geolocation.getCurrentPosition(function (pos) {
            foo(pos);
            refreshPosition = foo.bind(null, pos);
        });
    }

    refreshPosition();

    var unlock = unlock || {};
    unlock.results = {
        criteria: {{ criteria.id }},
        replace_url: '/index_dev.php/criteria/{{ criteria.id }}/attraction/replace/',
        getReplaceUrl: function(attraction_id) {
            return this.replace_url + attraction_id;
        },
        init: function() {
            var _this = this;
            this.result_tpl = _.template($('#attraction-tpl').text());
            $('.attraction-list').on('click', '[data-provides="attraction-replace"]', function(e) {
                var $btn = $(e.currentTarget),
                    $old_attraction = $btn.parents('.attraction');
                $.getJSON(_this.getReplaceUrl($btn.data('attraction')), function(data) {
                    var $new_attraction = $($.trim(_this.result_tpl(data)));
                    $old_attraction.replaceWith($new_attraction);
                    refreshPosition();
                });
            });
        }
    };
    unlock.results.init();

</script>
<script>
    $('.attraction-list').on('click', '.toggle', function(e) {
		$(e.currentTarget).closest("li").toggleClass( "open" );
	});
</script>
<script type="text/javascript" charset="utf-8">
</script>
{% endblock %}
